---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  LambdaExecutionRole:
    Type: String
    Default: polish-execution-role
  BucketName:
    Type: String
    Default: polish-website

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
                - /*
            # Condition:
              #   StringLike:
              #     'aws:Referer':
              #       - 'http://www.example.com/*'
              #       - 'http://example.net/*'
      Bucket: !Ref WebsiteBucket

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      RoleName: !Ref LambdaExecutionRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

Outputs:
  MontyWebsiteUrl:
    Description: Website URL.
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-website-url"

  LambdaExecutionRoleRoleArn:
    Description: Polish lambda execution role arn.
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-lambda-execution-role-arn"
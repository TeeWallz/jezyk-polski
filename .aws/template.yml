---
AWSTemplateFormatVersion: '2010-09-09'

Description: Static website

Parameters:
  DomainName:
    Description: Domain name of website
    Type: String

Resources:

  # S3BucketLogs:
  #   Type: AWS::S3::Bucket
  #   DeletionPolicy: Delete
  #   Properties:
  #     AccessControl: LogDeliveryWrite
  #     BucketName: !Sub '${AWS::StackName}-logs'

  S3BucketRoot:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub '${AWS::StackName}-root'
      # LoggingConfiguration:
      #   DestinationBucketName: !Ref S3BucketLogs
      #   LogFilePrefix: 'cdn/'
      WebsiteConfiguration:
        ErrorDocument: '404.html'
        IndexDocument: 'index.html'

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketRoot
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 's3:GetObject'
            Principal: '*'
            Resource: !Sub '${S3BucketRoot.Arn}/*'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
          MaxTTL: 31536000
          SmoothStreaming: false
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        # Logging:
        #   Bucket: !GetAtt S3BucketLogs.DomainName
        #   IncludeCookies: false
        #   Prefix: 'cdn/'
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'https-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
            DomainName: !GetAtt S3BucketRoot.RegionalDomainName
            Id: !Sub 'S3-${AWS::StackName}-root'
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:920911808053:certificate/cf9ad9f9-246e-44bf-80b9-f04bcc3e7def"
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  # Route53RecordSetGroup:
  #   Type: AWS::Route53::RecordSetGroup
  #   Properties:
  #     HostedZoneId: Z0466805M9YXQ5NUCVE5
  #     RecordSets:
  #     - Name: "polish.tomekwaller.com."
  #       Type: A
  #       AliasTarget:
  #         DNSName: !GetAtt CloudFrontDistribution.DomainName
  #         EvaluateTargetHealth: false
  #         HostedZoneId: Z0466805M9YXQ5NUCVE5
      # - Name: !Sub 'www.${DomainName}'
      #   Type: A
      #   AliasTarget:
      #     DNSName: !GetAtt CloudFrontDistribution.DomainName
      #     EvaluateTargetHealth: false
      #     HostedZoneId: Z0466805M9YXQ5NUCVE5
Outputs:
  CloudFrontUrl:
    Description: CloudFront website URL.
    Value: !GetAtt CloudFrontDistribution.DomainName
